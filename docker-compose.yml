version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: golf-ezz-postgres
    environment:
      POSTGRES_DB: golf_ezz
      POSTGRES_USER: golf_user
      POSTGRES_PASSWORD: golf_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - golf-ezz-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U golf_user -d golf_ezz"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: golf-ezz-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - golf-ezz-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: golf-ezz-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@golfezz.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - golf-ezz-network
    restart: unless-stopped
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: golf-ezz-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=golf_user
      - DB_PASSWORD=golf_password_123
      - DB_NAME=golf_ezz
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - golf-ezz-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/tmp

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: golf-ezz-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - golf-ezz-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  golf-ezz-network:
    driver: bridge
